import React, { useState, useEffect, useCallback, useRef } from 'react';
import { initializeApp } from 'firebase/app';
import { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';
import { getFirestore, collection, addDoc, onSnapshot, doc, updateDoc } from 'firebase/firestore';
import { Home, Lightbulb, Briefcase, FileText, ChevronLeft, Swords, Target, Settings, Building, User, DollarSign, Heart, PiggyBank, Shield, TrendingUp, Download, Copy, Mail, CheckCircle } from 'lucide-react';

// --- FIREBASE CONFIG ---
const firebaseConfig = {
    apiKey: import.meta.env.VITE_FIREBASE_API_KEY,
    authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,
    projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,
    storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
    appId: import.meta.env.VITE_FIREBASE_APP_ID
};

// --- STYLING ---
const styles = `
    :root { --background: 240 10% 3.9%; --foreground: 0 0% 98%; --card: 240 10% 3.9%; --card-foreground: 0 0% 98%; --popover: 240 10% 3.9%; --popover-foreground: 0 0% 98%; --primary: 0 0% 98%; --primary-foreground: 240 5.9% 10%; --secondary: 240 3.7% 15.9%; --secondary-foreground: 0 0% 98%; --muted: 240 3.7% 15.9%; --muted-foreground: 240 5% 64.9%; --accent: 240 3.7% 15.9%; --accent-foreground: 0 0% 98%; --destructive: 0 62.8% 30.6%; --destructive-foreground: 0 0% 98%; --border: 240 3.7% 15.9%; --input: 240 3.7% 15.9%; --ring: 240 4.9% 83.9%; }
    .dark { --background: 240 10% 3.9%; --foreground: 0 0% 98%; --card: 240 10% 3.9%; --card-foreground: 0 0% 98%; --popover: 240 10% 3.9%; --popover-foreground: 0 0% 98%; --primary: 0 0% 98%; --primary-foreground: 240 5.9% 10%; --secondary: 240 3.7% 15.9%; --secondary-foreground: 0 0% 98%; --muted: 240 3.7% 15.9%; --muted-foreground: 240 5% 64.9%; --accent: 240 3.7% 15.9%; --accent-foreground: 0 0% 98%; --destructive: 0 62.8% 30.6%; --destructive-foreground: 0 0% 98%; --border: 240 3.7% 15.9%; --input: 240 3.7% 15.9%; --ring: 240 4.9% 83.9%; }
    body { font-family: 'Inter', sans-serif; background-color: #09090b; color: #f8f9fa; }
    .gemini-button { background-color: #2563eb; color: white; transition: background-color 0.2s, transform 0.2s; }
    .gemini-button:hover { background-color: #1d4ed8; }
    .gemini-button:disabled { background-color: #1e40af; cursor: not-allowed; }
    .secondary-button { background-color: #3f3f46; color: #f8f9fa; }
    .secondary-button:hover { background-color: #52525b; }
    .loader { border: 4px solid #3f3f46; border-top: 4px solid #2563eb; border-radius: 50%; width: 24px; height: 24px; animation: spin 1s linear infinite; }
    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    .survey-option { border: 2px solid #3f3f46; transition: all 0.2s; }
    .survey-option:hover { border-color: #2563eb; background-color: #1c1c1f; }
    .survey-option.selected { border-color: #2563eb; background-color: #1e40af; color: white; }
    .progress-bar-bg { background-color: #3f3f46; }
    .progress-bar-fill { background-color: #2563eb; transition: width 0.3s ease-in-out; }
    .text-input { background-color: #1c1c1f; border: 2px solid #3f3f46; color: white; }
    .text-input:focus { border-color: #2563eb; outline: none; }
    .toast { position: fixed; bottom: 20px; left: 50%; transform: translateX(-50%); background-color: #22c55e; color: white; padding: 12px 24px; border-radius: 8px; z-index: 100; transition: opacity 0.3s, transform 0.3s; }
    .toast.hide { opacity: 0; transform: translate(-50%, 20px); }
`;

// --- DATA & TEXT STRINGS ---
const textStrings = {
    gemini_marketing_prompt: \`Vytvo≈ôte profesion√°ln√≠ marketingovou strategii pro firmu zalo≈æenou na tomto konceptu: 'concept'. Zahr≈àte n√°sleduj√≠c√≠ sekce s jasn√Ωmi nadpisy a pro ka≈ædou sekci uveƒète 3-4 odr√°≈æky:**C√≠lov√° skupina:**Detailn√≠ popis ide√°ln√≠ho z√°kazn√≠ka, jeho demografie, pot≈ôeby a chov√°n√≠.]**Unik√°tn√≠ prodejn√≠ nab√≠dka (USP):**Jasnƒõ definujte, co produkt odli≈°uje od konkurence. Buƒète konkr√©tn√≠.]**Marketingov√© kan√°ly:**Navrhnƒõte 3 specifick√© kan√°ly s vysvƒõtlen√≠m, proƒç jsou vhodn√© pro danou c√≠lovou skupinu.]**Kl√≠ƒçov√© metriky √∫spƒõchu (KPIs):**Uveƒète 3-4 mƒõ≈ôiteln√© ukazatele pro sledov√°n√≠ √∫spƒõ≈°nosti marketingu.]\`,
    gemini_risks_prompt: \`Pro firmu zalo≈æenou na konceptu 'concept' analyzujte potenci√°ln√≠ rizika a navrhnƒõte strategie pro jejich zm√≠rnƒõn√≠. Strukturujte svou odpovƒõƒè s n√°sleduj√≠c√≠mi nadpisy:**1. Tr≈æn√≠ a konkurenƒçn√≠ riziko:**Popi≈°te hlavn√≠ v√Ωzvy a navrhnƒõte 2 strategie zm√≠rnƒõn√≠.]**2. Technick√© a provozn√≠ riziko:**Popi≈°te potenci√°ln√≠ p≈ôek√°≈æky a navrhnƒõte 2 strategie zm√≠rnƒõn√≠.]**3. Finanƒçn√≠ a monetizaƒçn√≠ riziko:**Popi≈°te finanƒçn√≠ v√Ωzvy a navrhnƒõte 2 strategie zm√≠rnƒõn√≠.]\`,
    gemini_ideas_prompt: \`Na z√°kladƒõ n√°sleduj√≠c√≠ho obchodn√≠ho konceptu vygenerujte t≈ôi konkr√©tn√≠ a specializovan√© n√°pady na startup. U≈æivatel specifikoval n√°sleduj√≠c√≠ preference: Hlavn√≠ motivace: motivation, Poƒç√°teƒçn√≠ rozpoƒçet: budget, C√≠lov√Ω rozsah projektu: scale, P≈ô√≠stup k riziku: riskTolerance, C√≠lov√° skupina: audience, Preferovan√° monetizace: monetization, Technick√© dovednosti: skills, Preferovan√Ω obor: industry. Pros√≠m, p≈ôizp≈Øsobte n√°pady tƒõmto detailn√≠m specifikac√≠m. V√Ωstup prezentujte jako ƒç√≠slovan√Ω seznam.Koncept: "concept"\`,
    gemini_monetization_prompt: \`Pro podnik√°n√≠ zalo≈æen√© na konceptu 'concept' vytvo≈ôte potenci√°ln√≠ strategii monetizace. Struktura va≈°√≠ odpovƒõdi by mƒõla m√≠t n√°sleduj√≠c√≠ nadpisy:**1. Mo≈æn√© zdroje p≈ô√≠jm≈Ø:** Zdroj A: [Popis] Zdroj B: [Popis] Zdroj C: [Popis]**2. Doporuƒçen√Ω cenov√Ω model:**Popi≈°te prim√°rn√≠ cenov√Ω model, nap≈ô. freemium, p≈ôedplatn√©, jednor√°zov√Ω n√°kup]**3. Kl√≠ƒçov√© n√°klady k zv√°≈æen√≠:**Uveƒète hlavn√≠ provozn√≠ n√°klady, kter√© je t≈ôeba zv√°≈æit]\`,
    gemini_pitch_prompt: \`Pro podnik√°n√≠ zalo≈æen√© na konceptu 'concept' vytvo≈ôte struƒçnou "elevator pitch". Struktura va≈°√≠ odpovƒõdi by mƒõla m√≠t n√°sleduj√≠c√≠ nadpisy a ka≈æd√° sekce by mƒõla m√≠t 1-2 vƒõty:**Probl√©m:**Jak√Ω probl√©m to ≈ôe≈°√≠?]**≈òe≈°en√≠:**Jak tento podnik probl√©m ≈ôe≈°√≠?]**C√≠lov√Ω trh:**Kdo jsou hlavn√≠ z√°kazn√≠ci?]**Unik√°tn√≠ prodejn√≠ argument (USP):**ƒå√≠m se li≈°√≠ od konkurence?]\`,
    gemini_idea_details_prompt: \`Pro n√°sleduj√≠c√≠ podnikatelsk√Ω n√°pad 'idea' vytvo≈ôte detailn√≠ rozpis. Zahr≈àte n√°sleduj√≠c√≠ sekce s kr√°tk√Ωmi popisy a odr√°≈ækami:**C√≠lov√° Skupina:**Struƒçn√Ω popis, kdo je ide√°ln√≠ z√°kazn√≠k.]**Unik√°tn√≠ Prodejn√≠ Nab√≠dka (USP):**V ƒçem je n√°pad jedineƒçn√Ω a lep≈°√≠ ne≈æ konkurence?]**Mo≈æn√° Monetizace:**Jak by mohl projekt vydƒõl√°vat pen√≠ze? Uveƒète 2-3 p≈ô√≠klady.]**Prvn√≠ Kroky:**Jak√© jsou 3 nejd≈Øle≈æitƒõj≈°√≠ prvn√≠ kroky k realizaci?]\`,
    gemini_swot_prompt: \`Pro podnikatelsk√Ω n√°pad 'concept' vytvo≈ôte podrobnou SWOT anal√Ωzu. Pro ka≈ædou sekci uveƒète 3-4 konkr√©tn√≠ch bod≈Ø formou odr√°≈æek.**Siln√© str√°nky (Strengths):**Vnit≈ôn√≠ faktory, kter√© d√°vaj√≠ projektu v√Ωhodu.]**Slab√© str√°nky (Weaknesses):**Vnit≈ôn√≠ faktory, kter√© projekt znev√Ωhod≈àuj√≠.]**P≈ô√≠le≈æitosti (Opportunities):**Vnƒõj≈°√≠ faktory, kter√© by mohl projekt vyu≈æ√≠t ve sv≈Øj prospƒõch.]**Hrozby (Threats):**Vnƒõj≈°√≠ faktory, kter√© by mohly projektu u≈°kodit.]\`,
    gemini_competitor_prompt: \`Pro podnikatelsk√Ω n√°pad 'concept', identifikujte 3 hlavn√≠ potenci√°ln√≠ konkurenty (mohou to b√Ωt konkr√©tn√≠ firmy nebo typy slu≈æeb). Pro ka≈æd√©ho konkurenta struƒçnƒõ analyzujte:**Konkurent 1: [Jm√©no/Typ]** **Hlavn√≠ produkt/slu≈æba:** **P≈ôedpokl√°dan√© siln√© str√°nky:****Konkurent 2: [Jm√©no/Typ]** **Hlavn√≠ produkt/slu≈æba:** **P≈ôedpokl√°dan√© siln√© str√°nky:****Konkurent 3: [Jm√©no/Typ]** **Hlavn√≠ produkt/slu≈æba:** **P≈ôedpokl√°dan√© siln√© str√°nky:**\`,
};

// Static data for the business models
const businessData = {
    'ai-experiences': { 
        metrics: { automation: 9, scalability: 10, effort: 8 }, 
        icon: 'ü§ñ', 
        title: 'Gener√°tory z√°≈æitk≈Ø s AI', 
        description: 'Platformy, kter√© u≈æivatel≈Øm generuj√≠ unik√°tn√≠, personalizovan√© digit√°ln√≠ z√°≈æitky.',
        content: { 
            concept: { 
                body: "P≈ôekonejte hranice jednoduch√Ωch n√°stroj≈Ø. Vytv√°≈ôejte platformy, kter√© generuj√≠ unik√°tn√≠, personalizovan√© digit√°ln√≠ z√°≈æitky, od interaktivn√≠ch cestovn√≠ch pl√°n≈Ø po meditace na m√≠ru, v≈°e p≈ôizp≈Øsoben√© zad√°n√≠ u≈æivatele." 
            } 
        }
    },
    'micro-saas': { 
        metrics: { automation: 9, scalability: 10, effort: 9 }, 
        icon: '‚ö°', 
        title: 'Automatizovan√© Micro-SaaS platformy', 
        description: 'Vytvo≈ôte a prod√°vejte mal√©, zamƒõ≈ôen√© softwarov√© ≈ôe≈°en√≠, kter√© ≈ôe≈°√≠ jeden specifick√Ω probl√©m.',
        content: { 
            concept: { 
                body: "Vyv√≠jejte jednoduch√Ω n√°stroj typu Software-as-a-Service (SaaS), kter√Ω poskytuje jeden cenn√Ω krok pro √∫zce vymezen√© publikum. C√≠lem nen√≠ budovat obrovskou platformu, ale 'mikro' n√°stroj, kter√Ω je snadn√Ω udr≈æovat. P≈ô√≠jmy plynou z opakovan√©ho mƒõs√≠ƒçn√≠ho nebo roƒçn√≠ho p≈ôedplatn√©ho." 
            } 
        }
    },
    'digital-bundles': { 
        metrics: { automation: 8, scalability: 10, effort: 7 }, 
        icon: 'üì¶', 
        title: 'Kur√°torovan√© bal√≠ƒçky digit√°ln√≠ch produkt≈Ø', 
        description: 'Drop-shipping pro digit√°ln√≠ zbo≈æ√≠. Prod√°vejte tematick√© bal√≠ƒçky produkt≈Ø od nez√°visl√Ωch tv≈Ørc≈Ø.',
        content: { 
            concept: { 
                body: "Nevytv√°≈ôejte produkty sami. M√≠sto toho najdƒõte nez√°visl√© tv≈Ørce digit√°ln√≠ho zbo≈æ√≠ (e-knihy, ≈°ablony, presety, software), dohodnƒõte si provizi a prod√°vejte jejich produkty spoleƒçnƒõ v tematick√©m bal√≠ƒçku na sv√©m webu." 
            } 
        }
    },
    'programmatic-seo': { 
        metrics: { automation: 10, scalability: 9, effort: 8 }, 
        icon: 'üîç', 
        title: 'Programatick√© SEO affiliate weby', 
        description: 'Vytvo≈ôte specializovan√Ω web, kde je obsah generov√°n programaticky, aby c√≠lil na long-tail kl√≠ƒçov√° slova.',
        content: { 
            concept: { 
                body: "Vytvo≈ôte specializovan√Ω blog nebo recenzn√≠ web, kde je obsah generov√°n programaticky. To znamen√° pou≈æit√≠ skript≈Ø k kombinaci ≈°ablony s velk√Ωm souborem dat k vytvo≈ôen√≠ stovek nebo tis√≠c≈Ø jedineƒçn√Ωch str√°nek c√≠l√≠c√≠ch na velmi specifick√©, long-tail kl√≠ƒçov√° slova." 
            } 
        }
    },
    'interactive-courses': { 
        metrics: { automation: 7, scalability: 10, effort: 5 }, 
        icon: 'üìö', 
        title: 'Interaktivn√≠ digit√°ln√≠ p≈ô√≠bƒõhy a kurzy', 
        description: 'Prod√°vejte poutav√© kurzy nebo p≈ô√≠bƒõhy ve stylu "vyber si sv√© vlastn√≠ dobrodru≈æstv√≠" s vƒõtv√≠c√≠mi p≈ô√≠bƒõhy.',
        content: { 
            concept: { 
                body: "Vytv√°≈ôejte a prod√°vejte kr√°tk√©, poutav√©, textov√© kurzy nebo fiktivn√≠ p≈ô√≠bƒõhy, kde u≈æivatel ƒçin√≠ rozhodnut√≠, kter√° ovliv≈àuj√≠ v√Ωsledek. Je to poutavƒõj≈°√≠ ne≈æ jednoduch√° e-kniha a m≈Ø≈æe b√Ωt cenƒõno v√Ω≈°e." 
            } 
        }
    },
    'personalized-shops': { 
        metrics: { automation: 9, scalability: 8, effort: 7 }, 
        icon: 'üé®', 
        title: 'Automatizovan√© obchody s personalizovan√Ωmi produkty', 
        description: 'Vytvo≈ôte e-shopy, kter√© prod√°vaj√≠ produkty na zak√°zku personalizovan√© z√°kazn√≠kem.',
        content: { 
            concept: { 
                body: "Zalo≈æte online obchod propojen√Ω se slu≈æbou tisku na vyd√°n√≠ (print-on-demand, POD). Z√°kazn√≠ci si personalizuj√≠ produkty (hrnky, triƒçka, plak√°ty, poh√°dkov√© knihy) vlastn√≠m textem, fotografiemi nebo umƒõn√≠m generovan√Ωm AI. Objedn√°vka se automaticky ode≈°le poskytovateli POD, kter√Ω ji vytiskne, zabal√≠ a ode≈°le p≈ô√≠mo z√°kazn√≠kovi. Vy se star√°te o e-shop a marketing." 
            } 
        }
    },
};

// Firebase instances
let db, auth;

// --- API & UTILITY FUNCTIONS ---
const callGeminiAPI = async (userQuery) => {
    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;

    if (!apiKey) {
        console.error('Gemini API key is missing. Please add VITE_GEMINI_API_KEY to your .env file');
        return null;
    }

    const apiUrl = \`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=\${apiKey}\`;
    const payload = { contents: [{ parts: [{ text: userQuery }] }] };

    try {
        const response = await fetch(apiUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        });

        if (!response.ok) throw new Error(\`API request failed with status \${response.status}\`);

        const result = await response.json();
        return result.candidates?.[0]?.content?.parts?.[0]?.text;
    } catch (error) {
        console.error('Error fetching from Gemini API:', error);
        return null;
    }
};

const parseGeneratedContent = (text) => {
    if (!text) return [];
    let htmlText = text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
    htmlText = htmlText.replace(/(^|\n)- /g, '$1<li>');
    htmlText = htmlText.replace(/(^|\n)‚Ä¢ /g, '$1<li>');
    htmlText = \`<ul>\${htmlText}</ul>\`.replace(/<\/li><li>/g, '</li><li>').replace(/<ul><li>/g,'<ul>').replace(/<\/li><\/ul>/g,'</ul>');

    const sections = htmlText.split('\n\n').filter(s => s.trim() !== '');
    return sections.map(section => {
        const lines = section.split('\n');
        const titleMatch = lines[0].match(/<strong>(.*?)<\/strong>|(.*?):/);
        const title = titleMatch ? (titleMatch[1] || titleMatch[2]) : lines[0];
        const content = titleMatch ? lines.slice(1).join('\n') : lines.slice(1).join('\n');
        return { title, content: content.trim() };
    });
};

const plainTextFromGeneratedContent = (text) => {
    if (!text) return '';
    return text.replace(/\*\*/g, '');
};

// REACT COMPONENTS WOULD CONTINUE HERE...
// Pro struƒçnost uk√°zky, zde by pokraƒçovaly v≈°echny React komponenty
// (Toast, Header, ModelSelector, ProjectDashboard, atd.)

export default function App() {
    // State management
    const [userId, setUserId] = useState(null);
    const [projects, setProjects] = useState([]);
    const [view, setView] = useState('models');
    const [selectedProject, setSelectedProject] = useState(null);
    const [generatedIdeas, setGeneratedIdeas] = useState([]);
    const [isGenerating, setIsGenerating] = useState(false);

    // Firebase initialization
    useEffect(() => {
        try {
            const app = initializeApp(firebaseConfig);
            db = getFirestore(app);
            auth = getAuth(app);

            onAuthStateChanged(auth, async (user) => {
                if (user) {
                    setUserId(user.uid);
                } else {
                    await signInAnonymously(auth);
                }
            });
        } catch (e) {
            console.error("Firebase init failed:", e);
        }
    }, []);

    // Project listener
    useEffect(() => {
        if (!userId || !db) return;

        const q = collection(db, \`users/\${userId}/projects\`);
        const unsubscribe = onSnapshot(q, (snapshot) => {
            const fetchedProjects = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
            setProjects(fetchedProjects.sort((a,b) => b.createdAt.toDate() - a.createdAt.toDate()));
        });

        return () => unsubscribe();
    }, [userId]);

    // Render
    return (
        <>
            <style>{styles}</style>
            <div className="bg-[#09090b] min-h-screen flex flex-col">
                <header className="px-8 py-4 bg-[#111113] border-b border-gray-800">
                    <h1 className="text-2xl font-bold text-white">Pilot N√°pad≈Ø</h1>
                </header>
                <main className="flex-1 p-8">
                    <div className="text-center py-16">
                        <h2 className="text-3xl font-bold text-white mb-6">üöÄ V√≠tejte v Pilot N√°pad≈Ø</h2>
                        <p className="text-gray-400 mb-8">AI-powered gener√°tor podnikatelsk√Ωch n√°pad≈Ø</p>
                        <div className="text-sm text-gray-500">
                            Nahrajte API kl√≠ƒçe do .env souboru pro plnou funkcionalitu
                        </div>
                    </div>
                </main>
            </div>
        </>
    );
}